version: '3.9'

services:
  fastapi:
    container_name: fastapi-app
    build: ./FastAPI
    ports:
      - "8000:8000"
    volumes:
      - ./FastAPI:/app        # ★ホストのコードを /app にマウント
    networks:
      - default

  api:
    extends:
      file: ./dify/docker/docker-compose.yaml
      service: api
    ports:
      - "5001:5001"

  plugin_daemon:
    extends:
      file: ./dify/docker/docker-compose.yaml
      # ↓ 元のファイルでのサービス名が 'plugin_daemon' であることを確認
      service: plugin_daemon
    volumes:
      # ここで /home/dify/data をホスト側の匿名/Named ボリュームにマウント
      - plugin_daemon_data:/home/dify/data

  nginx:
    extends:
      file: ./dify/docker/docker-compose.yaml
      service: nginx
    ports:
      - '${EXPOSE_NGINX_PORT:-80}:${NGINX_PORT:-80}'
      - '${EXPOSE_NGINX_SSL_PORT:-443}:${NGINX_SSL_PORT:-443}'
    depends_on:
      - api
      - web
      - fastapi
    volumes:                      # ★ conf を 1 枚だけ追加マウント
      - ./nginx/default.conf.template:/etc/nginx/conf.d/default.conf.template:ro

  web:
    extends:
      file: ./dify/docker/docker-compose.yaml
      service: web
    ports:
      - "3000:3000"

  worker:
    extends:
      file: ./dify/docker/docker-compose.yaml
      service: worker
  db:
    extends:
      file: ./dify/docker/docker-compose.yaml
      service: db

  redis:
    extends:
      file: ./dify/docker/docker-compose.yaml
      service: redis

  weaviate:
    extends:
      file: ./dify/docker/docker-compose.yaml
      service: weaviate
    ports:
      - "8080:8080"

  sandbox: # sandbox サービスを追加 (Difyの機能を使う場合)
    extends:
      file: ./dify/docker/docker-compose.yaml
      service: sandbox
  ssrf_proxy:
    extends:
      file: ./dify/docker/docker-compose.yaml
      service: ssrf_proxy
  
  certbot:
    extends:
      file: ./dify/docker/docker-compose.yaml
      service: certbot

  ngrok:
    image: ngrok/ngrok:latest          # ← multi‑arch（arm64 も OK）
    restart: unless-stopped
    environment:
      NGROK_AUTHTOKEN: "${NGROK_AUTHTOKEN}"  # ngrok トークンを .env に
    command: ["http", "fastapi:8000"]  # entrypoint が 'ngrok' なので args だけ書く
    depends_on:
      - fastapi

  dozzle:
    image: amir20/dozzle:latest
    environment: 
      - DOZZLE_ENABLE_ACTIONS=true
      - DOZZLE_FILTER=status=running
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9999:8080"  
  
  
networks:

  ssrf_proxy_network:  # ←追加（元の設定に合わせる）
    driver: bridge
    internal: true

volumes:
  plugin_daemon_data: